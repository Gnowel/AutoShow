<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/icon.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AlternatingRowBackground"
                Value="#16181E"/>
        <Setter Property="Background" 
                Value="#20202C"/>
        <!--{DynamicResource {x:Static SystemColors.ControlBrushKey}}-->
        <Setter Property="BorderThickness" 
                Value="0,0,0,1"/>
        <Setter 
            Property="Foreground" 
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter 
            Property="BorderBrush" 
            Value="#FF688CAF"/>
        <Setter 
            Property="GridLinesVisibility" 
            Value="Horizontal"/>
        <Setter 
            Property="HorizontalGridLinesBrush" 
            Value="AntiqueWhite"/>
        <Setter 
            Property="HeadersVisibility" 
            Value="Column"/>
        <Setter 
            Property="RowDetailsVisibilityMode" 
            Value="VisibleWhenSelected"/>
        <Setter 
            Property="ScrollViewer.CanContentScroll" 
            Value="False"/>
        <Setter
            Property="SelectionMode" 
            Value="Single"/>
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both"/>
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False"/>
        <Setter 
            Property="SelectionUnit"
            Value="FullRow"/>
        <Setter
            Property="CanUserAddRows"
            Value="False"/>
        <Setter
            Property="CanUserDeleteRows"
            Value="False"/>
        <Setter 
            Property="CanUserResizeRows"
            Value="False"/>
        <Setter
            Property="CanUserReorderColumns"
            Value="False"/>
        <Setter
            Property="FontSize"
            Value="13"/>
        <Setter
            Property="GridLinesVisibility"
            Value="None"/>
        <Setter
            Property="ColumnWidth"
            Value="*"/>
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
        <Setter 
            Property="Background" 
            Value="#3E3E46"/>
        <Setter 
            Property="FontWeight" 
            Value="SemiBold"/>
        <Setter 
            Property="Foreground"
            Value="White"/>
        <Setter
            Property="BorderThickness"
            Value="0"/>
        <Setter 
            Property="Height" 
            Value="32"/>
        <Setter 
            Property="Padding" 
            Value="5,0"/>
        <Setter 
            Property="VerticalContentAlignment" 
            Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}">
                            
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                <StackPanel 
                                    Grid.Column="1"
                                    Orientation="Horizontal"
                                    Margin="5,0,0,0">
                                    
                                    <Border
                                        Height="{TemplateBinding FontSize}"
                                        Width="10"
                                        Background="#3E3E46">
                                        <Image 
                                            Source="{DynamicResource sortUpDontActive_icon}"
                                            x:Name="SortUpIcon"
                                            Stretch="Uniform"/>
                                    </Border>
                                    
                                    <Border
                                        Height="{TemplateBinding FontSize}"
                                        Width="10"
                                        Background="#3E3E46">
                                        <Image 
                                            Source="{DynamicResource sortDownDontActive_icon}"
                                            x:Name="SortDownIcon"
                                            Stretch="Uniform"/>
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="SortDirection"
                            Value="Ascending">
                            <Setter
                                TargetName="SortDownIcon"
                                Property="Source"
                                Value="{DynamicResource sortDownActive_icon}"/>

                        </Trigger>
                        <Trigger
                            Property="SortDirection"
                            Value="Descending">
                            <Setter
                                TargetName="SortUpIcon"
                                Property="Source"
                                Value="{DynamicResource sortUpActive_icon}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridCell">
        <Setter
            Property="Foreground"
            Value="White"/>
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}"/>
        <Setter
            Property="Margin"
            Value="15,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="DataGridCell">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0">
                        <ContentPresenter
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                    </Border>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsSelected"
                Value="True">
                <Setter
                    Property="Background"
                    Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
        <Setter
            Property="Background" 
            Value="#3E3E46"/>
        <Setter 
            Property="Foreground"
            Value="White"/>

        <!--{DynamicResource {x:Static SystemColors.WindowBrushKey}}-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter
            Property="MinHeight"
            Value="30"/>
        <Setter
            Property="Margin"
            Value="0,4,0,0"/>

        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="0,8"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter 
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter 
                                Grid.Column="1"
                                Grid.Row="1" 
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader
                                Grid.RowSpan="2" 
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" 
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger 
                Property="IsNewItem" 
                Value="True">
                <Setter 
                    Property="Margin"
                    Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </Trigger>-->
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter 
                    Property="Background"
                    Value="#00AAEB"/>
                <Setter
                    Property="Foreground"
                    Value="Black"/>
            </Trigger>
            <Trigger
                Property="IsSelected"
                Value="True">
                <Setter 
                    Property="Background"
                    Value="#00AAEB"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsSelected"
                        Value="true"/>
                    <Condition
                        Property="Selector.IsSelectionActive"
                        Value="false"/>
                </MultiTrigger.Conditions>
                <Setter
                    Property="Background"
                    Value="#3E3E46"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter 
            Property="Background" 
            Value="#3E3E46"/>
        <Setter 
            Property="FontWeight" 
            Value="SemiBold"/>
        <Setter 
            Property="Foreground"
            Value="White"/>
        <Setter
            Property="BorderThickness"
            Value="0"/>
        <Setter 
            Property="Height" 
            Value="32"/>
        <Setter 
            Property="Padding" 
            Value="5,0"/>
        <Setter 
            Property="VerticalContentAlignment" 
            Value="Center"/>
    </Style>

    <Style x:Key="EditButton" TargetType="Button">
        <Setter 
            Property="Background"
            Value="White"/>
        <Setter 
            Property="BorderBrush"
            Value="Gray"/>
        <Setter 
            Property="Foreground"
            Value="White"/>
        <Setter 
            Property="VerticalAlignment"
            Value="Center"/>
        <Setter 
            Property="FocusVisualStyle"
            Value="{x:Null}"/>
        <Setter 
            Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="Button">
                    <Border
                        x:Name="border"
                        BorderThickness="1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Width="20"
                        Height="20">

                        <Border.Background>
                            <SolidColorBrush
                                x:Name="BorderBackground"
                                Color="#00AAEB"/>
                        </Border.Background>
                        <Image 
                            Source="{StaticResource edit_icon}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger
                            RoutedEvent="Border.MouseEnter"
                            SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="BorderBackground"
                                        Storyboard.TargetProperty="Color"
                                        From="#00AAEB"
                                        To="#00739F"
                                        Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger
                            RoutedEvent="Border.MouseLeave"
                            SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="BorderBackground"
                                        Storyboard.TargetProperty="Color"
                                        From="#00739F"
                                        To="#00AAEB"
                                        Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DeleteButton"
           TargetType="Button">
        <Setter 
            Property="Background"
            Value="Red"/>
        <Setter 
            Property="BorderBrush"
            Value="DarkRed"/>
        <Setter 
             Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">
                    <Border
                        x:Name="border"
                        Margin="5,0,0,0"
                        Width="20"
                        Height="20"
                        BorderBrush="{TemplateBinding BorderBrush}">

                        <Border.Background>
                            <SolidColorBrush
                                x:Name="BorderBackground"
                                Color="Transparent"/>
                        </Border.Background>
                        
                        <Image 
                            Source="{StaticResource delete_icon}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger
                            RoutedEvent="Border.MouseEnter"
                            SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="BorderBackground"
                                        Storyboard.TargetProperty="Color"
                                        From="Transparent"
                                        To="#00739F"
                                        Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger
                            RoutedEvent="Border.MouseLeave"
                            SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="BorderBackground"
                                        Storyboard.TargetProperty="Color"
                                        From="#00739F"
                                        To="Transparent"
                                        Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddButton" TargetType="Button">
        <Setter 
            Property="VerticalAlignment"
            Value="Top"/>
        <Setter 
            Property="HorizontalAlignment"
            Value="Left"/>
        <Setter
            Property="Margin"
            Value="10,10,0,0"/>
        <Setter 
            Property="Height"
            Value="32"/>
        <Setter
            Property="Width"
            Value="80"/>
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">
                    <Border
                        Name="border"
                        CornerRadius="8"
                        TextBlock.FontSize="14"
                        TextBlock.FontWeight="Medium">

                        <Border.Background>
                            <SolidColorBrush
                                x:Name="BorderBackground"
                                Color="#00AAEB"/>
                        </Border.Background>
                        
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        
                        <EventTrigger
                            RoutedEvent="Border.MouseEnter"
                            SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="BorderBackground"
                                        Storyboard.TargetProperty="Color"
                                        From="#00AAEB"
                                        To="#00739F"
                                        Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>    
                        </EventTrigger>

                        <EventTrigger
                            RoutedEvent="Border.MouseLeave"
                            SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="BorderBackground"
                                        Storyboard.TargetProperty="Color"
                                        From="#00739F"
                                        To="#00AAEB"
                                        Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
              
            </Setter.Value>
        </Setter>
            
    </Style>
</ResourceDictionary>